package com.example.coursework;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.view.View;


public class Listen extends Activity {
	
	double latitude, longitude;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        latitude = -1;
        longitude = -1;
        setContentView(R.layout.activity_listen);
    	findViewById(R.id.listen_button).setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				alert("cool", getLocation(v.getContext()), v);
			}
		});
    }
	
	public void alert(String title, String message, View v)
	{
		AlertDialog.Builder builder = new AlertDialog.Builder(v.getContext());
        builder.setTitle(title);
        builder.setMessage(message);
        builder.setNeutralButton("ok", new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int arg1) {
				dialog.dismiss();
			}
		});
        builder.setCancelable(false);
        final AlertDialog myAlertDialog = builder.create();
        myAlertDialog.show();
	}
	
	private String getLocation(Context c)
	{
		/*locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
		Criteria criteria = new Criteria();
		criteria.setAccuracy(0);
		Location location = null; //locationManager.getLastKnownLocation(locationManager.getBestProvider(criteria, true));
		/*List<String> providers = locationManager.getAllProviders();
		for(int i=0; i<providers.size(); i++)
		{
			location = locationManager.getLastKnownLocation(providers.get(i));
			if(location != null)
				break;
		}*/
		/*LocationManager lm = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
		lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 100, 1, locationListener);
		Location location = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER); */
		
		/*LocationManager lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
	    LocationListener locationListener = new mylocationlistener();
	    lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListener);
	    Location location = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
		
		/*try {
		  latitude = location.getLatitude();
		  longitude = location.getLongitude();
		}
		catch (NullPointerException e){
		  latitude = -1.0;
		  longitude = -1.0;
		}*/
		_getLocation();
		return "lat: " + latitude + " lon: " + longitude;
	}
	
	private void _getLocation ()
	{
	    LocationManager locationManager = (LocationManager)getSystemService (LOCATION_SERVICE);
	    String bestProvider = locationManager.getBestProvider (new Criteria (), false);
	    locationManager.requestLocationUpdates(bestProvider,0 ,0, loc_listener);
		Location location = locationManager.getLastKnownLocation (bestProvider);
		try
		{
			latitude = location.getLatitude ();
			longitude = location.getLongitude ();
		}
		catch (NullPointerException e)
		{
			latitude = -1.0;
			longitude = -1.0;
		}
	  }
	  LocationListener loc_listener = new LocationListener() {
		  public void onLocationChanged(Location l) { }
		  public void onProviderEnabled(String p) { }
		  public void onProviderDisabled(String p) { }
		  public void onStatusChanged(String p, int status, Bundle extras) { }      
	};
}

/**/